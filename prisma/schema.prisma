// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")

}

model User {
  id String @id @default(uuid())
  username String @unique
  password String
  posts Post[] 
  upvotes Upvote[]
  downvotes Downvote[]
  subreddits Subreddit[]
}

model Post {
  id String @id @default(uuid())
  text String @unique
  title String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade )
  userId String
  subreddit Subreddit @relation(fields: [subredditId], references: [id], onDelete: Cascade)
  subredditId String
  parentId String?
  children Post[] @relation("parentchild") 
  parent Post? @relation("parentchild", fields: [parentId], references: [id], onDelete: Cascade)
  upvotes Upvote[]
  downvotes Downvote[]
}

model Subreddit {
  id String @id @default(uuid())
  userId String
  name String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  posts Post[]
}

model Upvote {
  id String @id @default(uuid())
  userId String
  postId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique(fields: [userId, postId], name: "upvoteId")
}

model Downvote {
  id String @id @default(uuid())
  userId String
  postId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique(fields: [userId, postId], name: "downvoteId")
}
